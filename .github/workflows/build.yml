---
name: Helper - Build Node.js Service Docker Image

on:
  workflow_call:
    inputs:
      service_name:
        description: 'Service name'
        required: true
        type: string
    outputs:
      image_tag:
        description: 'Generated image tag'
        value: ${{ jobs.build.outputs.image_tag }}
  workflow_dispatch:
    inputs:
      service_name:
        description: 'Service name'
        required: true
        type: choice
        options:
          - app-node
          - tpl-wrk-thing
          - wrk-base
          - wrk-book
          - wrk-ork

jobs:
  build:
    name: Build Node.js Service Docker Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Generate GitHub App Token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          images: |
            ${{ inputs.service_name }}
          tags: |
            # Main branch -> latest
            type=raw,value=latest,enable={{is_default_branch}}
            # Dev branch -> development
            type=raw,value=development,enable=${{ github.ref == 'refs/heads/dev' }}
            # All other branches -> alpha with short SHA
            type=sha,format=short,prefix=alpha-,enable=${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/dev' }}
            # PR builds -> pr-{number}
            type=ref,event=pr

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: "./${{ inputs.service_name }}"
          file: "./Dockerfile"
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=gha,scope=${{ inputs.service_name }}-${{ github.ref_name }}
            type=gha,scope=${{ inputs.service_name }}-main
            type=gha,scope=${{ inputs.service_name }}-base
          cache-to: |
            type=gha,scope=${{ inputs.service_name }}-${{ github.ref_name }},mode=max
            type=gha,scope=${{ inputs.service_name }}-base,mode=max

      - name: Display Built Image
        run: |
          echo "## 🐳 Docker Image Built Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Service:** \`${{ inputs.service_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ steps.meta.outputs.tags }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Platforms:** linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY